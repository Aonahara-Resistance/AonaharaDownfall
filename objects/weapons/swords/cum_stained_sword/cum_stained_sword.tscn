[gd_scene load_steps=13 format=2]

[ext_resource path="res://objects/weapons/swords/sword.tscn" type="PackedScene" id=1]
[ext_resource path="res://objects/weapons/swords/cum_stained_sword/cum_stained_sword.gd" type="Script" id=2]
[ext_resource path="res://objects/weapons/staves/parseids_staff/rock_shard/rock_shard.tscn" type="PackedScene" id=3]
[ext_resource path="res://objects/weapons/swords/cum_stained_sword/sprites/cum_stained_sword.png" type="Texture" id=4]
[ext_resource path="res://assets/characters/hand.png" type="Texture" id=5]

[sub_resource type="Shader" id=8]
code = "shader_type canvas_item;
render_mode unshaded;

uniform int intensity = 50;
uniform float precision : hint_range(0,0.02);
uniform bool flipColors;		//Flip coloring 90 degrees.

//If not using a texture, will blend between these two colors
uniform vec4 outline_color : hint_color;
uniform vec4 outline_color_2 : hint_color;

uniform bool use_outline_uv;	//Use the outline_uv for coloring or not. Recomended not, but sometimes might be good.

uniform bool useTexture;		//Use a texture for the coloring
uniform sampler2D outlineTexture;	//This is the texture that will be used for coloring. Recomended to use a gradient texture, but I guess anything else works.

varying vec2 o;
varying vec2 f;



void fragment()
{
	ivec2 t = textureSize(TEXTURE, 0);
	vec2 regular_uv;
	regular_uv.x = UV.x + (f.x - o.x)/float(t.x);
	regular_uv.y = UV.y + (f.y - o.y)/float(t.y);
	
	vec4 regular_color = texture(TEXTURE, regular_uv);
	
	if((regular_uv.x < 0.0 || regular_uv.x > 1.0) || (regular_uv.y < 0.0 || regular_uv.y > 1.0) || regular_color.a <=0.25){
		regular_color = vec4(0.0); 
	}
	
	vec2 ps = TEXTURE_PIXEL_SIZE * float(intensity) * precision;
	
	vec4 final_color = regular_color;
	if (regular_color.a <= 0.0)
	{
		for(int x = -1; x <= 1; x += 1){
			for(int y = -1; y <= 1; y += 1){
				
				//Get the X and Y offset from this
				if (x==0 && y==0)
					continue;
					
				vec2 outline_uv = regular_uv + vec2(float(x) * ps.x, float(y) * ps.y); 
				
				//Sample here, if we are out of bounds then fail
				vec4 outline_sample = texture(TEXTURE, outline_uv);
				if((outline_uv.x < 0.0 || outline_uv.x > 1.0) || (outline_uv.y < 0.0 || outline_uv.y > 1.0)){
					//We aren't a real color
					outline_sample = vec4(0);
				}
				
				vec2 final_uv = use_outline_uv ? outline_uv : UV;	//get the UV we will be using, controlled via use_outline_uv
				
				//Is our sample empty? Is there something nearby?
				if(outline_sample.a > final_color.a){
					if(!useTexture)	//If we're not using a texture
					{
						final_color = mix(outline_color, outline_color_2, flipColors ? final_uv.y : final_uv.x);
					}
					else
					{
						vec2 uv = flipColors ? vec2(final_uv.y, final_uv.x) : final_uv;
						vec4 outline = texture(outlineTexture, uv);
						
						final_color = outline;
					}
				}
			}
		}
	}
	COLOR = final_color; 
}"

[sub_resource type="ShaderMaterial" id=9]
shader = SubResource( 8 )
shader_param/intensity = 0
shader_param/precision = 0.02
shader_param/flipColors = null
shader_param/outline_color = Color( 0.180392, 0.560784, 0.980392, 1 )
shader_param/outline_color_2 = Color( 0.952941, 0.976471, 1, 1 )
shader_param/use_outline_uv = false
shader_param/useTexture = false

[sub_resource type="CapsuleShape2D" id=7]
radius = 1.65025
height = 10.9225

[sub_resource type="Animation" id=5]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("WeaponContainer:rotation_degrees")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = false
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ -97.0 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("SoundEffect:playing")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ false ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("WeaponContainer/WeaponHitbox/CollisionShape2D:disabled")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ true ]
}
tracks/3/type = "value"
tracks/3/path = NodePath(".:scale")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 2, 2 ) ]
}

[sub_resource type="Animation" id=2]
length = 0.8
tracks/0/type = "value"
tracks/0/path = NodePath("WeaponContainer:rotation_degrees")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.8 ),
"transitions": PoolRealArray( 1, 0.176777, 1 ),
"update": 0,
"values": [ -68.1, 108.8, -68.1 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("WeaponContainer/WeaponHitbox/CollisionShape2D:disabled")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ false, true ]
}

[sub_resource type="Animation" id=6]
resource_name = "spin"
length = 0.8
tracks/0/type = "value"
tracks/0/path = NodePath("WeaponContainer:rotation_degrees")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.8 ),
"transitions": PoolRealArray( 0.517632, 1.1487 ),
"update": 0,
"values": [ -68.1, 644.056 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("WeaponContainer/WeaponHitbox/CollisionShape2D:disabled")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.8 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ false, true ]
}
tracks/2/type = "method"
tracks/2/path = NodePath(".")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.8 ),
"transitions": PoolRealArray( 1, 1 ),
"values": [ {
"args": [  ],
"method": "start_heavy"
}, {
"args": [  ],
"method": "end_heavy"
} ]
}
tracks/3/type = "value"
tracks/3/path = NodePath(".:scale")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.8 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 2, 2 ), Vector2( 1, 1 ) ]
}

[sub_resource type="Animation" id=3]
length = 0.4
tracks/0/type = "value"
tracks/0/path = NodePath("EffectSprite:visible")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ true, false ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("EffectSprite:frame")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.2, 0.3 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("EffectSprite:position")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.2, 0.3 ),
"transitions": PoolRealArray( 0.233258, 1, 1 ),
"update": 0,
"values": [ Vector2( 25.468, 12.4358 ), Vector2( 29.1833, 14.9509 ), Vector2( 29.183, 14.951 ) ]
}

[node name="CumStainedSword" instance=ExtResource( 1 )]
position = Vector2( 9.22342, 3.89646 )
scale = Vector2( 2, 2 )
script = ExtResource( 2 )
damage = 20
heavy_cooldown_time = 3.0
cum_projectile = ExtResource( 3 )

[node name="WeaponContainer" parent="." index="0"]
position = Vector2( -0.00150087, -0.00423738 )
rotation = 11.2409

[node name="Sprite" parent="WeaponContainer" index="0"]
material = SubResource( 9 )
position = Vector2( -0.387979, -0.0990992 )
rotation = 2.23422
texture = ExtResource( 4 )
offset = Vector2( -8.5743, 0.0859971 )
flip_h = true
flip_v = true

[node name="Hand" parent="WeaponContainer" index="1"]
texture = ExtResource( 5 )

[node name="WeaponHitbox" parent="WeaponContainer" index="2"]
collision_mask = 4
monitoring = true

[node name="CollisionShape2D" parent="WeaponContainer/WeaponHitbox" index="0"]
position = Vector2( 7.00366, -8.97965 )
rotation = 0.66024
shape = SubResource( 7 )
disabled = true

[node name="EffectSprite" parent="." index="1"]
position = Vector2( 25.468, 12.4358 )
rotation = 0.667016
scale = Vector2( 3, 3 )
hframes = 3

[node name="WeaponAnimation" parent="." index="2"]
anims/RESET = SubResource( 5 )
anims/attack = SubResource( 2 )
anims/spin = SubResource( 6 )

[node name="EffectAnimation" parent="." index="3"]
anims/slash = SubResource( 3 )

[node name="SoundEffect" parent="." index="4"]
visible = false

[editable path="WeaponContainer/WeaponHitbox"]
